{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile": "2017-03-09-profile",
  "parameters": {
    "clusterName": {
      "type": "string",
      "defaultValue": "hadoop",
      "metadata": {
        "description": "Name of the hadoop cluster.  Used as part of the name of each VM in the cluster."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine controller."
      },
      "defaultValue": "localadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "The size of the Virtual Machine workers."
      },
      "allowedValues": [
        "Standard_DS3_v2",
        "Standard_DS4_v2"
      ]
    },
    "clusterSize": {
      "type": "int",
      "defaultValue": 4,
      "minValue": 1,
      "maxValue": 32,
      "metadata": {
        "description": "The number of worker nodes in the cluster."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 512,
      "allowedValues": [
        128,
        256,
        512,
        768,
        1024
      ],
      "metadata": {
        "description": "Size of the attached data disks in GB."
      }
    }
  },
  "variables": {
    "defaultName": "[parameters('clusterName')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "location": "[resourceGroup().location]",
    "OSDiskName": "hadoopOSDisk",
    "DataDiskName": "hadoopDataDisk",
    "nicName": "hadoopNic",
    "dnsNameForPublicIP": "[parameters('clusterName')]",
    "publicIPAddressName": "[variables('defaultName')]",
    "publicIPAddressType": "Dynamic",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/16",
    "subnetName": "[variables('defaultName')]",
    "storageAccountName": "[variables('defaultName')]",
    "storageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "[variables('defaultName')]",
    "vmName": "[variables('defaultName')]",
    "virtualNetworkName": "[variables('defaultName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(variables('defaultName'))]",
    "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
    "masters": [
      "NameNode",
      "ResourceManager",
      "WebAppProxy",
      "MapReduceJobHistory"
    ],
    "numberMasters": "[length(variables('masters'))]"
  },
  "resources": [
    {
      "comments": "Storage account which holds all containers and logs.",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "comments": "Network security group for the network.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow remote connection using SSH.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "comments": "The public IP addresses for the master nodes.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),variables('masters')[copyIndex()])]",
      "location": "[variables('location')]",
      "copy": {
        "name": "masterPublicIps",
        "count": "[variables('numberMasters')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[tolower(concat(variables('dnsNameForPublicIP'),variables('masters')[copyIndex()]))]"
        }
      }
    },
    {
      "comments": "Virtual network in which the nodes will reside.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "comments": "Network interfaces for each master node. This has a public and private IP address.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),variables('masters')[copyIndex()])]",
      "location": "[variables('location')]",
      "copy": {
        "count": "[variables('numberMasters')]",
        "name": "masterNics"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'),variables('masters')[copyIndex()])]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "publicIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'),variables('masters')[copyIndex()]))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "Network interfaces for each worker node.  These will only be private IP addresses.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('clusterSize')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "privateIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "These are the master nodes.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('clusterName'),variables('masters')[copyIndex()])]",
      "location": "[variables('location')]",
      "copy": {
        "name": "masterNodes",
        "count": "[variables('numberMasters')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),variables('masters')[copyIndex()])]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('clusterName'),variables('masters')[copyIndex()])]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('clusterName'),variables('masters')[copyIndex()])]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),variables('masters')[copyIndex()],'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),variables('masters')[copyIndex()]))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "comments": "Worker nodes.",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),'Worker',copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "workerNodes",
        "count": "[parameters('clusterSize')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('nicname'),copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('clusterName'),'masterosdisk',copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('clusterName'),'workerosdisk',copyIndex())]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),copyIndex(),'/',variables('OSDiskName'),'worker',copyIndex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('clusterName'),'workerdatadisk',copyIndex())]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),copyIndex(),'/',variables('DataDiskName'),'worker',copyIndex(),'.vhd')]"
              },
              "lun": 0,
              "caching": "ReadWrite",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "name": "[concat(parameters('clusterName'),variables('masters')[copyIndex()],'/accountSetup')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "masterNodes"
      ],
      "copy": {
        "name": "masterAccountSetup",
        "count": 4
      },
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "accountSetup"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "fileUris": [
            "https://hadoopsetup.blob.local.azurestack.external/scripts/accountSetup.sh"
          ],
          "commandToExecute": "chmod +x accountSetup.sh; ./accountSetup.sh"
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),'Worker',copyIndex(),'/accountSetup')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "workerNodes"
      ],
      "copy": {
        "name": "workerAccountSetup",
        "count": "[parameters('clusterSize')]"
      },
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "accountSetup"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "fileUris": [
            "https://hadoopsetup.blob.local.azurestack.external/scripts/accountSetup.sh"
          ],
          "commandToExecute": "chmod +x accountSetup.sh; ./accountSetup.sh"
        }
      }
    },
    {
      "name": "[concat(parameters('clusterName'),variables('masters')[copyIndex()],'/hadoopSetup')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "masterAccountSetup",
        "workerAccountSetup"
      ],
      "copy": {
        "name": "masterSetup",
        "count": 4
      },
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "hadoopSetup"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "fileUris": [
            "https://hadoopsetup.blob.local.azurestack.external/scripts/hadoopSetup.sh"
          ],
          "commandToExecute": "[concat('chmod +x hadoopSetup.sh; ./hadoopSetup.sh',' ', parameters('clusterName'),' ', parameters('clusterSize'))]"
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),'Worker',copyIndex(),'/hadoopSetup')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "masterAccountSetup",
        "workerAccountSetup"
      ],
      "copy": {
        "name": "workerHadoopSetup",
        "count": "[parameters('clusterSize')]"
      },
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "hadoopSetup"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "fileUris": [
            "https://hadoopsetup.blob.local.azurestack.external/scripts/hadoopSetup.sh"
          ],
          "commandToExecute": "[concat('chmod +x hadoopSetup.sh; ./hadoopSetup.sh',' ', parameters('clusterName'),' ', parameters('clusterSize'))]"
        }
      }
    }
  ],
  "outputs": {}
}
